JEDIT TO DO

* Short term (2.0)

- Open file is broken on JDK 1.2 (JDK bug?)
- Finish plugin development section of user's guide

* Next release (2.1)

- Change -+lineNumber command line parameter to filename#+lineNumber
- Customizable filename filters in open dialog box
- Rectangular selection
- Commands for skipping over code blocks (A+UP, A+DOWN)
- The paragraph commands are rather broken at the moment
- Rewrite C and HTML token markers to use the same structure as the
  Perl token marker, should make them a bit faster
- Add BUFFER_SAVING event type, fired before buffer is saved
- Some fellow implemented more intelligent indent, add it

- Some people want an MDI interface in jEdit. As long as it supports
  multiple top level parent frames I'll be happy.
  - Modal dialogs should remain top-level
  - Tool and menu bars should be moved to the parent frame
  - Views will have a text area
  - Status bar will be in the parent frame, displaying info
    for the current view, along with a hint
  - Find dialog box will be a 'pallete'
  - Find tool bar, for quickly locating strings

* Long term

- `Static' abbreviation expansion
  - Edit->Abbreviations menu
  - rename Expand Abbreviation to Expand Dynamic Abbreviation
  - when expanding static abbrev, first try one named by the
    currently entered text, then try the text itself

- `Registers' can be used for storing text and selection ranges:
  - anchor becomes the @ caret register
	goto-caret-register@.		C+y
	set-caret-register@.		C+t
	select-caret-register@.		C+u
	swap-caret-register@.		C+k
  - caret registers are buffer-specific, not persistent
	goto-caret-register		C+e C+r C+y
	set-caret-register		C+e C+r C+t
	select-caret-register		C+e C+r C+u
	swap-caret-register		C+e C+r C+k
  - clipboard becomes string register .
	insert-string-register@.	C+v
	set-string-register@.		C+c
	cut-string-register@.		C+x
	insert-string-register@<	C+e C+v
  - string registers are persistent (except clipboard, which is handled
    by the OS)
	insert-string-register		C+e C+r C+v
	set-string-register		C+e C+r C+c
	cut-string-register		C+e C+r C+x
	append-string-register		C+e C+r C+a
	open-string-register		C+e C+r C+p
	
	edit-registers			F5
  - paste previous lists all previously pasted registers
  - what to do with paste predefined?

- Reverse search
- Search and replace in unopened files
- Use VIM-style "swap" instead of autosave; only write out changes, not
  entire document. Then provide a command for recovering swap files
- Folding
  - Explicit folds added by the user (saved to .filename.folds), also look
    for "fold:n" in document
  - Folds are stored per-buffer, but each view has its own fold configuration
- Markers can be specified with special "marks:" lines in the file itself
- Drop .folds and .marks files, make user-set stuff non-persistent?
- Integrate XMode
- Range-based token markers (?)
- Drop support for JDK 1.1 and use collections, input methods, etc

-- Slava Pestov
<sp@gjt.org>
