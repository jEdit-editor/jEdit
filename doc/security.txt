JEDIT SERVER SECURITY NOTES (security.txt, last modified 9 Dec 1998)

Contents
--------
1. The Problem
2. Solutions
2.1. Logging
2.2. Random Port
2.3. Authentication

1. The Problem
--------------
The jEdit server listens on a TCP/IP socket. It accepts connections 
from all hosts. Therefore, in theory, while you are connected to a 
network, anybody can open files on your desktop. If jEdit is being run 
as root on a Unix system, the attacker can make jEdit read from 
/dev/mem and such, which may crash your system if it has memory-mapped 
I/O devices.

2. Solutions
------------
While it's not bullet-proof, the jEdit server is reasonably secure 
against such attacks.

2.1. Logging
------------
The server logs all connections to standard output. Since TCP/IP source
addresses are reasonably hard to forge, at least you will know who to 
kill :).

2.2. Random Port
----------------
When the server starts, it binds to any free port, and stores the port 
number in the port file. Therefore, remote attackers will have to 
port-scan your machine to get to the jEdit server.

2.3. Authentication
-------------------
A random key is also stored in the port file, along with the port 
number. Clients have to send the key to the server before they can open 
any files. The key is a 63 bit long random (Created with 
Math.abs(random.nextLong())).

-- Slava Pestov
<sp@gjt.org>
