#!/bin/sh
# Configure script for jEdit on Unix
# Asks the user several questions and creates a Rules.make
# file based on the responses

# Called if an error occurs, cleans up
error()
{
	rm -f $RULES
	exit $1
}

# Print something to the Rules.make file
rulesOut()
{
	echo "$@" >&8
}

# Print version
VERSION=1.5.1
echo ">> Configuring jEdit $VERSION"
echo

# Clean up if user kills us
trap error 1
trap error 2
trap error 3
trap error 15

# Print `constant' stuff that doesn't change - rules, suffixes, etc
RULES=Rules.make
exec 8>$RULES
rulesOut "# Created by Configure on `date`"
rulesOut ".SUFFIXES: .java .class"
rulesOut '../$(jar): $(resources)'
rulesOut '	$(JAR) cf ../$(jar) $(resources) $(no_compile_res)'
rulesOut ".java.class:"
rulesOut '	@echo $<:'
rulesOut '	@$(JAVAC) -classpath $(CLASSPATH):../.. $<'
rulesOut VERSION=$VERSION

# Configure installation directory
echo -n "Where do you want to install jEdit? [/opt/slava/share/jedit-$VERSION] "
read JEDIT_HOME
if test "$JEDIT_HOME" = ""
then
	JEDIT_HOME="/opt/slava/share/jedit-$VERSION"
fi

echo -n "Where do you want to install jEdit's shell script? [/opt/slava/bin] "
read JEDIT_BIN
if test "$JEDIT_BIN" = ""
then
	JEDIT_BIN=/opt/slava/bin
fi

rulesOut "JEDIT_HOME=$JEDIT_HOME"
rulesOut "JEDIT_BIN=$JEDIT_BIN"

# Configure Java virtual machine
echo -n "What is the name of your Java virtual machine? [java] "
read JAVA
if test "$JAVA" = ""
then
	JAVA=java
fi
rulesOut JAVA=$JAVA

# Configure Java compiler
echo -n "What is the name of your Java compiler? [javac] "
read JAVAC
if test "$JAVAC" = ""
then
	JAVAC=javac
fi
rulesOut JAVAC=$JAVAC

# Configure JAR tool
echo -n "What is the name of your JAR tool? [jar] "
read JAR
if test "$JAR" = ""
then
	JAR=jar
fi
rulesOut JAR=$JAR

# Sed the jedit shell script to set the Java virtual machine
cp jedit jedit.cf_tmp
sed "s|JAVA=.*|JAVA=\"$JAVA\"|g" < jedit.cf_tmp > jedit

chmod +x jedit
rm -f jedit.cf_tmp

echo
echo ">> Configuration complete."
echo ">> Run 'make install' to install jEdit."
echo ">> Run 'make' if you wish to recompile it first."
echo
